{"ast":null,"code":"var _jsxFileName = \"I:\\\\Projects\\\\nextHackerNewsApp\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// React library will not be required to be imported, when working with Next.js\nimport fetch from 'isomorphic-fetch';\nimport Error from 'next/error';\nimport { Layout, StoryList } from '../components';\n\nclass index extends React.Component {\n  static async getInitialProps({\n    req,\n    res,\n    query\n  }) {\n    //destructurizing the context object => req/res from erver, query param from url\n    //query => can be used to dynamically change the endpoint, that's currently being accessed, based on the page that was requested\n    let stories, page;\n\n    try {\n      // calc the page value with the request data\n      page = Number(query.page) || 1; // if the user is in the homepage and has not requested any pages before, the query param won't be available in the- =context obj\n\n      const response = await fetch('https://node-hnapi.herokuapp.com/news?page=1');\n      stories = await response.json(); // Parsing the JSON Data\n    } catch (err) {\n      console.log(err);\n      stories = []; // Not to throw any weird error on the page, while tryin to loop oer something that's empty/non-iterable\n    }\n\n    return {\n      stories\n    };\n  }\n\n  render() {\n    const {\n      stories\n    } = this.props;\n\n    if (stories.length === 0) {\n      return __jsx(Error, {\n        statusCode: 503,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n\n    return __jsx(Layout, {\n      title: \"Hacker Next\",\n      description: \"A Hacker News clone made with Next.js\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(StoryList, {\n      stories: stories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), __jsx(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: `/?page=${page + 1}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Next Page\"))));\n  }\n\n}\n\nexport default index;","map":{"version":3,"sources":["I:/Projects/nextHackerNewsApp/pages/index.js"],"names":["fetch","Error","Layout","StoryList","index","React","Component","getInitialProps","req","res","query","stories","page","Number","response","json","err","console","log","render","props","length"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,eAAlC;;AAEA,MAAMC,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAAoC;AAEhC,eAAaC,eAAb,CAA6B;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,GAAP;AAAYC,IAAAA;AAAZ,GAA7B,EAAkD;AAAC;AAC/C;AAEA,QAAIC,OAAJ,EAAaC,IAAb;;AACA,QAAI;AACA;AACAA,MAAAA,IAAI,GAAGC,MAAM,CAACH,KAAK,CAACE,IAAP,CAAN,IAAsB,CAA7B,CAFA,CAGA;;AACA,YAAME,QAAQ,GAAG,MAAMd,KAAK,CAAC,8CAAD,CAA5B;AACAW,MAAAA,OAAO,GAAG,MAAMG,QAAQ,CAACC,IAAT,EAAhB,CALA,CAKiC;AACpC,KAND,CAOA,OAAOC,GAAP,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAL,MAAAA,OAAO,GAAG,EAAV,CAFQ,CAEM;AACjB;;AAED,WAAO;AACHA,MAAAA;AADG,KAAP;AAGH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAER,MAAAA;AAAF,QAAc,KAAKS,KAAzB;;AAEA,QAAIT,OAAO,CAACU,MAAR,KAAmB,CAAvB,EAA0B;AACtB,aAAO,MAAC,KAAD;AAAO,QAAA,UAAU,EAAE,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,WACI,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,aAAd;AAA4B,MAAA,WAAW,EAAC,uCAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAW,MAAA,OAAO,EAAEV,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAG,UAASC,IAAI,GAAG,CAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,CAFJ,CADJ;AAYH;;AA1C+B;;AA4CpC,eAAeR,KAAf","sourcesContent":["// React library will not be required to be imported, when working with Next.js\r\nimport fetch from 'isomorphic-fetch'\r\nimport Error from 'next/error'\r\nimport { Layout, StoryList } from '../components'\r\n\r\nclass index extends React.Component {\r\n\r\n    static async getInitialProps({ req, res, query }) {//destructurizing the context object => req/res from erver, query param from url\r\n        //query => can be used to dynamically change the endpoint, that's currently being accessed, based on the page that was requested\r\n\r\n        let stories, page;\r\n        try {\r\n            // calc the page value with the request data\r\n            page = Number(query.page) || 1;\r\n            // if the user is in the homepage and has not requested any pages before, the query param won't be available in the- =context obj\r\n            const response = await fetch('https://node-hnapi.herokuapp.com/news?page=1');\r\n            stories = await response.json(); // Parsing the JSON Data\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n            stories = []; // Not to throw any weird error on the page, while tryin to loop oer something that's empty/non-iterable\r\n        }\r\n\r\n        return {\r\n            stories\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { stories } = this.props;\r\n\r\n        if (stories.length === 0) {\r\n            return <Error statusCode={503} />\r\n        }\r\n\r\n        return (\r\n            <Layout title=\"Hacker Next\" description=\"A Hacker News clone made with Next.js\">\r\n                <StoryList stories={stories} />\r\n                <footer>\r\n                    <Link href={`/?page=${page + 1}`}>\r\n                        <a>\r\n                            Next Page\r\n                        </a>\r\n                    </Link>\r\n                </footer>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nexport default index;"]},"metadata":{},"sourceType":"module"}